//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Collections.Specialized;
using System.Xml.Serialization;


namespace Demo.Entities
{
    [Serializable]
    public partial class Employee
    {
        #region Primitive Properties
    
        public virtual int EmployeeId
        {
            get;
            set;
        }
    
        public virtual string LastName
        {
            get;
            set;
        }
    
        public virtual string FirstName
        {
            get;
            set;
        }
    
        public virtual string Title
        {
            get;
            set;
        }
    
        public virtual Nullable<int> ReportsTo
        {
            get { return _reportsTo; }
            set
            {
                try
                {
                    _settingFK = true;
                    if (_reportsTo != value)
                    {
                        if (Employee2 != null && Employee2.EmployeeId != value)
                        {
                            Employee2 = null;
                        }
                        _reportsTo = value;
                    }
                }
                finally
                {
                    _settingFK = false;
                }
            }
        }
        private Nullable<int> _reportsTo;
    
        public virtual Nullable<System.DateTime> BirthDate
        {
            get;
            set;
        }
    
        public virtual Nullable<System.DateTime> HireDate
        {
            get;
            set;
        }
    
        public virtual string Address
        {
            get;
            set;
        }
    
        public virtual string City
        {
            get;
            set;
        }
    
        public virtual string State
        {
            get;
            set;
        }
    
        public virtual string Country
        {
            get;
            set;
        }
    
        public virtual string PostalCode
        {
            get;
            set;
        }
    
        public virtual string Phone
        {
            get;
            set;
        }
    
        public virtual string Fax
        {
            get;
            set;
        }
    
        public virtual string Email
        {
            get;
            set;
        }

        #endregion
        #region Navigation Properties
    
    	//[XmlElement("Customer", typeof(Collection<Customer>))]
        public virtual ICollection<Customer> Customer
        {
            get
            {
                if (_customer == null)
                {
                    var newCollection = new FixupCollection<Customer>();
                    newCollection.CollectionChanged += FixupCustomer;
                    _customer = newCollection;
                }
                return _customer;
            }
            set
            {
                if (!ReferenceEquals(_customer, value))
                {
                    var previousValue = _customer as FixupCollection<Customer>;
                    if (previousValue != null)
                    {
                        previousValue.CollectionChanged -= FixupCustomer;
                    }
                    _customer = value;
                    var newValue = value as FixupCollection<Customer>;
                    if (newValue != null)
                    {
                        newValue.CollectionChanged += FixupCustomer;
                    }
                }
            }
        }
    	//[XmlElement("Customer", typeof(Collection<Customer>))]
        private ICollection<Customer> _customer;
    
    	//[XmlElement("Employee1", typeof(Collection<Employee>))]
        public virtual ICollection<Employee> Employee1
        {
            get
            {
                if (_employee1 == null)
                {
                    var newCollection = new FixupCollection<Employee>();
                    newCollection.CollectionChanged += FixupEmployee1;
                    _employee1 = newCollection;
                }
                return _employee1;
            }
            set
            {
                if (!ReferenceEquals(_employee1, value))
                {
                    var previousValue = _employee1 as FixupCollection<Employee>;
                    if (previousValue != null)
                    {
                        previousValue.CollectionChanged -= FixupEmployee1;
                    }
                    _employee1 = value;
                    var newValue = value as FixupCollection<Employee>;
                    if (newValue != null)
                    {
                        newValue.CollectionChanged += FixupEmployee1;
                    }
                }
            }
        }
    	//[XmlElement("Employee1", typeof(Collection<Employee>))]
        private ICollection<Employee> _employee1;
    
        public virtual Employee Employee2
        {
            get { return _employee2; }
            set
            {
                if (!ReferenceEquals(_employee2, value))
                {
                    var previousValue = _employee2;
                    _employee2 = value;
                    FixupEmployee2(previousValue);
                }
            }
        }
        private Employee _employee2;

        #endregion
        #region Association Fixup
    
        private bool _settingFK = false;
    
        private void FixupEmployee2(Employee previousValue)
        {
            if (previousValue != null && previousValue.Employee1.Contains(this))
            {
                previousValue.Employee1.Remove(this);
            }
    
            if (Employee2 != null)
            {
                if (!Employee2.Employee1.Contains(this))
                {
                    Employee2.Employee1.Add(this);
                }
                if (ReportsTo != Employee2.EmployeeId)
                {
                    ReportsTo = Employee2.EmployeeId;
                }
            }
            else if (!_settingFK)
            {
                ReportsTo = null;
            }
        }
    
        private void FixupCustomer(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (e.NewItems != null)
            {
                foreach (Customer item in e.NewItems)
                {
                    item.Employee = this;
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (Customer item in e.OldItems)
                {
                    if (ReferenceEquals(item.Employee, this))
                    {
                        item.Employee = null;
                    }
                }
            }
        }
    
        private void FixupEmployee1(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (e.NewItems != null)
            {
                foreach (Employee item in e.NewItems)
                {
                    item.Employee2 = this;
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (Employee item in e.OldItems)
                {
                    if (ReferenceEquals(item.Employee2, this))
                    {
                        item.Employee2 = null;
                    }
                }
            }
        }

        #endregion
    }
}
